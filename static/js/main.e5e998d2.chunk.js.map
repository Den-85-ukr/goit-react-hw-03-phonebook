{"version":3,"sources":["components/ListItem/ListItem.module.scss","components/ContactList/ContactList.module.scss","App.module.scss","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ListItem/ListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","addContactForm","type","onChange","pattern","title","required","Component","Filter","placeholder","defaultProps","ListItem","onDeleteItem","contact","onClick","ContactList","visibleContacts","onDeleteContact","phoneBookList","map","id","App","contacts","filter","handleFilterChange","findName","normalizedName","toLowerCase","find","addContact","alert","uuidv4","deleteContact","contactId","prevState","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","main_container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5e998d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ListItem_contact__3BETP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookList\":\"ContactList_phoneBookList__3_2fA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"App_main_container__rxB84\",\"content\":\"App_content__1Z46a\"};","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.addContactForm}>\r\n        <label>\r\n          <span>Name</span>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          <span>Number</span>\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\n//import styles from './Filter.module.scss';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <span>Find contact by name</span>\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n      name=\"filter\"\r\n      placeholder=\"Enter name\"\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.defaultProps = {\r\n  value: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default Filter;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ListItem.module.scss';\r\n\r\nclass ListItem extends Component {\r\n  render() {\r\n    const { name, number, onDeleteItem } = this.props;\r\n    return (\r\n      <li>\r\n      <span className={styles.contact}>\r\n      {name}:{number}\r\n      </span>\r\n      <button\r\n      onClick={onDeleteItem}\r\n      type=\"button\"\r\n      >\r\n      Delete\r\n      </button>\r\n      </li>)\r\n    }\r\n};\r\n\r\nListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteItem: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ListItem;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '../ListItem';\r\nimport styles from './ContactList.module.scss';\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    const { visibleContacts, onDeleteContact } = this.props;\r\n    return (\r\n      <ul className={styles.phoneBookList}>\r\n        {visibleContacts.map(({ id, name, number }) => { return (\r\n          <ListItem\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteItem={()=>onDeleteContact(id)}\r\n          />\r\n        ); })}\r\n      </ul>\r\n    );\r\n  };\r\n};\r\n     \r\nContactList.defaultProps = {\r\n  visibleContacts: [],\r\n};\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  visibleContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport styles from './App.module.scss';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleFilterChange = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  findName = name => {\n    const { contacts } = this.state;\n    const normalizedName = name.toLowerCase();\n\n    return contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName,\n    );\n  };\n\n  addContact = ({ name, number }) => {\n    const checkContact = this.findName(name);\n\n    if (checkContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    \n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    };\n    \n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <div className={styles.main_container}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter onChange={this.handleFilterChange} value={filter} />\n        <ContactList\n          visibleContacts={this.getVisibleContacts()}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContactForm\":\"ContactForm_addContactForm__Ck2cK\"};"],"sourceRoot":""}